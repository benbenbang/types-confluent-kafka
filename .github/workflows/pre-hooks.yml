name: pre-commit-hooks

on:
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0
      - name: test condition 1
        if: startsWith(github.event.workflow_run.head_commit.message , 'refactor(wip)') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association)
        run: |
          echo "triggered 1"
      - name: test condition2
        if: ${{ startsWith(github.event.workflow_run.head_commit.message , 'refactor(wip)') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association) }}
        run: |
          echo "triggered 2"
      - name: test condition3
        if: startsWith(github.event.head_commit.message , 'refactor(wip)') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association)
        run: |
          echo "triggered 3"
      - name: test condition4
        if: ${{ startsWith(github.event.head_commit.message , 'refactor(wip)') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association) }}
        run: |
          echo "triggered 4"
      - name: Get Head Commit Message
        id: get-head-commit-message
        run: |
          echo "::set-output name=headCommitMsg::$(git show -s --format=%s)"
          echo "::set-output name=head_commit_message::$(git show -s --format=%s)" >> "$GITHUB_OUTPUT"
      - name: condtion 5
        if: ${{ startsWith(env.head_commit_message , 'refactor') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association) }}
        run: |
          echo "trigger 5"
        env:
          head_commit_message: ${{ steps.get-head-commit-message.outputs.head_commit_message }}
      - name: echo values
        run: |
          echo ${{ github.event.workflow_run.head_commit.message }}
          echo ${{ github.event.head_commit.message  }}
          echo ${{ github.event.pull_request.head.ref }}
          echo ${{ github.event.pull_request.head.labels }}
          echo ${{ env.headCommitMsg }}
          echo ${{ github.event.head_commit.message }}
          echo $(git log -1 --pretty=format:"%s")
          echo ${{ github.event.commits[0].message }}
          echo "${{toJSON(github.event)}}"
          echo $(git show -s --format=%s)
        env:
          head_commit_message: ${{ steps.get-head-commit-message.outputs.head_commit_message }}
          headCommitMsg: ${{ steps.get-head-commit-message.outputs.headCommitMsg }}
      - run: |
          echo ${{ github.event.pull_request.author_association }}
          echo ${{ github.event.workflow_run.head_commit.message }}
          echo ${{ startsWith( github.event.workflow_run.head_commit.message , 'build(release)') }}
          echo ${{ contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association) }}
          echo ${{ startsWith(github.event.workflow_run.head_commit.message , 'build(release)') && contains(fromJson('["OWNER", "CONTRIBUTOR"]'), github.event.pull_request.author_association) }}
